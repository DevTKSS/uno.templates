parameters:
  vmImage: ''
  stageVariant: ''

jobs:
- job: Matrix_Gen_${{ parameters.stageVariant }}
  displayName: Test Matrix Generation ${{ parameters.stageVariant }}
  steps:
      - pwsh: |
          $tests = @(
            # The format is "TestName;[PlatformFilter];Arguments"
            # The platform 

            "SkiaEverywhereRecommended;;unoapp --renderer skia -preset=recommended",
            "SkiaEverywhereBlank;;unoapp --renderer skia -preset=blank",

            "DefaultArgs;;unoapp ",
            "Recommended;;unoapp -preset recommended",
            "SkiaOnlyHeads;;unoapp -platforms desktop",
            "MobileOnlyHeads;;unoapp -platforms android ios maccatalyst",
            "RecommendedMarkup;;unoapp -preset recommended -markup csharp",
            "RecommendedMarkupDsp;;unoapp -preset recommended -markup csharp -dsp",
            "RecommendedMarkupFluent;;unoapp -preset recommended -markup csharp -theme fluent",
            "MVVM;;unoapp -preset recommended -presentation mvvm",
            "CSharpMarkup;;unoapp -markup csharp",
            "NoHosting;;unoapp -preset recommended -di false",
            "HostingOnly;;unoapp -preset recommended -config false -loc false -http false -log none --navigation blank",
            "NoConfiguration;;unoapp -preset recommended -config false",
            "NoLocalization;;unoapp -preset recommended -loc false",
            "NoHttp;;unoapp -preset recommended -http false",
            "NoSerilog;;unoapp -preset recommended -log default",
            "NoServer;;unoapp -preset recommended -server false",
            "NoServerNoHttp;;unoapp -preset recommended -server false -http false",
            "NoTests;;unoapp -preset recommended -tests none",
            "FrameNavigation;;unoapp  -preset recommended --navigation blank",

            # Disabling this test for now as it was specific to net7
            # https://github.com/unoplatform/uno.templates/issues/22
            # "Issue22;;unoapp -preset blank -tfm net7.0 -platforms android -platforms ios -platforms maccatalyst -platforms windows -platforms wasm -platforms desktop -presentation mvvm -server false -tests none -vscode false -pwa false -di true -nav regions -log none -theme material",

            "CustomAuthMvux;;unoapp -preset=recommended -auth=custom",
            "CustomAuthMvvm;;unoapp -preset=recommended -presentation mvvm -auth=custom",
            "CustomAuthMvuxCSharp;;unoapp -preset=recommended -auth=custom -markup csharp",
            "CustomAuthMvvmCSharp;;unoapp -preset=recommended -presentation mvvm -auth=custom -markup csharp",
            "WebAuthMvux;;unoapp -preset=recommended -auth=web",
            "WebAuthMvvm;;unoapp -preset=recommended -presentation mvvm -auth=web",
            "WebAuthMvuxCSharp;;unoapp -preset=recommended -auth=web -markup csharp",
            "WebAuthMvvmCSharp;;unoapp -preset=recommended -presentation mvvm -auth=web -markup csharp",
            "OidcAuthMvux;;unoapp -preset=recommended -auth=oidc",
            "OidcAuthMvvm;;unoapp -preset=recommended -presentation mvvm -auth=oidc",
            "OidcAuthMvuxCSharp;;unoapp -preset=recommended -auth=oidc -markup csharp",
            "OidcAuthMvvmCSharp;;unoapp -preset=recommended -presentation mvvm -auth=oidc -markup csharp",
            "MsalAuthMvux;;unoapp -preset=recommended -auth=msal",
            "MsalAuthMvvm;;unoapp -preset=recommended -presentation mvvm -auth=msal",
            "MsalAuthMvuxCSharp;;unoapp -preset=recommended -auth=msal -markup csharp",
            "MsalAuthMvvmCSharp;;unoapp -preset=recommended -presentation mvvm -auth=msal -markup csharp",
            "MauiBlank;Windows;-preset=blank -maui",
            "MauiRecommended;Windows;-preset=recommended -maui",
            "MauiBlank_Linux;Linux;-preset=blank -maui -platforms android desktop wasm",
            "MauiRecommended_Linux;Linux;-preset=recommended -maui -platforms android desktop wasm",
            "ThemeService;;unoapp -theme-service",
            # https://github.com/unoplatform/uno.templates/issues/396
            "Issue396;;unoapp -preset blank -platforms windows -platforms android -presentation none -theme fluent -nav blank -log none -maui -markup csharp",
            # https://github.com/unoplatform/uno.templates/issues/414
            "Issue414;;unoapp -preset recommended -auth msal -markup csharp",
            # https://github.com/unoplatform/uno.templates/issues/477
            "Issue477;;unoapp -preset recommended -theme material -toolkit",
            # https://github.com/unoplatform/uno.templates/issues/500
            "Issue500;;unoapp -preset blank -markup csharp -presentation mvux -theme material -di -config -http -nav regions -log default -server -auth msal",
            # https://github.com/unoplatform/uno.templates/issues/572
            "Issue572;;unoapp -preset `"recommended`" -id `"com.companyname.TestDuplicatedReference`" -pub `"O=TestDuplicatedReference`" -platforms `"android`" -platforms `"ios`" -platforms `"wasm`" -platforms `"desktop`" -theme-service  -vscode False -pwa False -theme `"material`" -presentation `"mvvm`" -config  -di  -log `"default`" -nav `"regions`" -http  -loc  -server False -tests `"unit`" -tests `"ui`" -toolkit  -dsp"
          );

          $matrixGroups = [ordered]@{}
          $currentGroup = @()
          $groupSize = 5

          # Generate matrix for net8
          for ($i = 0; $i -lt $tests.Count; $i++) 
          { 
              $currentGroup += $tests[$i] + " -tfm net8.0";

              if ($currentGroup.Count -eq $groupSize) {
                $matrixGroups["Group$($matrixGroups.Count)"] = @{
                  'unocheckArguments' = ''
                  'validations' = $currentGroup -join "`r`n"
                };
                $currentGroup = @()
              }
          }

          # generate matrix for net9
          for ($i = 0; $i -lt $tests.Count; $i++) 
          { 
              $currentGroup += $tests[$i] + " -tfm net9.0";

              if ($currentGroup.Count -eq $groupSize) {
                $matrixGroups["Group$($matrixGroups.Count)_net9"] = @{
                  'unocheckArguments' = '--pre-major'
                  'validations' = $currentGroup -join "`r`n"
                };
                $currentGroup = @()
              }
          }

          $matrixAsJson = $matrixGroups | ConvertTo-Json -Compress

          echo "json: $matrixAsJson"

          echo "##vso[task.setvariable variable=groups;isOutput=true]$matrixAsJson"

        name: TestMatrix

- job: Packages_Validation_${{ parameters.stageVariant }}
  dependsOn: Matrix_Gen_${{ parameters.stageVariant }}

  pool:
    vmImage: ${{ parameters.vmImage }}

  strategy:
    matrix: $[ dependencies.Matrix_Gen_${{ parameters.stageVariant }}.outputs['TestMatrix.groups'] ]

  variables:
    - name: UseDotNetNativeToolchain
      value: false
    - name: unocheckArguments
      value: ''

  steps:
  - template: templates/package-validation.yml     
    parameters:
      xCodeRoot: '/Applications/Xcode_16.2.app'
      arguments: $(validations)
      unocheckArguments: $(unocheckArguments)
